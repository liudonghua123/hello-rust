name: Windows-CI

on:
  push:
    branches:
      - master
    tags:
      - '*'

jobs:
  build:
    env:
      APP_NAME: hello-rust
    runs-on: windows-latest
    if: contains(github.ref, 'tags')
    steps:
      - uses: actions/checkout@v2
      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
        shell: bash

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Build 64-bit binary 
        run: |
          cargo build --target=x86_64-pc-windows-msvc --release

      - name: Enable 32-bit target
        run: |
          rustup target add i686-pc-windows-msvc

      - name: Build 32-bit binary 
        run: |
          cargo build --target=i686-pc-windows-msvc --release

      - name: Prepare release files
        run: |
          7z a -tzip ${APP_NAME}-windows-x86-${{ steps.branch_name.outputs.SOURCE_NAME }}.zip -r ./target/i686-pc-windows-msvc/release/${APP_NAME}.exe
          7z a -tzip ${APP_NAME}-windows-x64-${{ steps.branch_name.outputs.SOURCE_NAME }}.zip -r ./target/x86_64-pc-windows-msvc/release/${APP_NAME}.exe
        shell: bash

      - uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: ${APP_NAME}-windows-x86-${{ steps.branch_name.outputs.SOURCE_NAME }}.zip; ${APP_NAME}-windows-x64-${{ steps.branch_name.outputs.SOURCE_NAME }}.zip
          tags: true
          draft: false
